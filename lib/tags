!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AlternatePair	javascript.vim	/^function s:AlternatePair()$/;"	f
Balanced	javascript.vim	/^function s:Balanced(lnum,line)$/;"	f
Continues	javascript.vim	/^function s:Continues()$/;"	f
DoWhile	javascript.vim	/^function s:DoWhile()$/;"	f
ExprCol	javascript.vim	/^function s:ExprCol()$/;"	f
GetJavascriptIndent	javascript.vim	/^function GetJavascriptIndent()$/;"	f
GetPair	javascript.vim	/^  function s:GetPair(start,end,flags,skip)$/;"	f
GetVars	javascript.vim	/^function s:GetVars()$/;"	f
IsBlock	javascript.vim	/^function s:IsBlock()$/;"	f
IsContOne	javascript.vim	/^function s:IsContOne(cont)$/;"	f
IsSwitch	javascript.vim	/^function s:IsSwitch()$/;"	f
LookingAt	javascript.vim	/^function s:LookingAt()$/;"	f
Nat	javascript.vim	/^function s:Nat(int)$/;"	f
OneScope	javascript.vim	/^function s:OneScope()$/;"	f
ParseCino	javascript.vim	/^function s:ParseCino(f)$/;"	f
PreviousToken	javascript.vim	/^function s:PreviousToken(...)$/;"	f
Pure	javascript.vim	/^function s:Pure(f,...)$/;"	f
SearchLoop	javascript.vim	/^function s:SearchLoop(pat,flags,expr)$/;"	f
SkipFunc	javascript.vim	/^function s:SkipFunc()$/;"	f
SynAt	javascript.vim	/^function s:SynAt(l,c)$/;"	f
Token	javascript.vim	/^function s:Token()$/;"	f
b:did_indent	javascript.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	javascript.vim	/^let b:undo_indent = 'setlocal indentexpr< smartindent< autoindent< indentkeys<'$/;"	v
s:bvars	javascript.vim	/^let s:bvars = {$/;"	v
s:continuation	javascript.vim	/^let s:continuation = get(g:,'javascript_continuation',$/;"	v
s:cpo_save	javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:in_comm	javascript.vim	/^let s:in_comm = s:skip_expr[:-14] . "'comment\\\\|doc'"$/;"	v
s:opfirst	javascript.vim	/^let s:opfirst = '^' . get(g:,'javascript_opfirst',$/;"	v
s:rel	javascript.vim	/^let s:rel = has('reltime')$/;"	v
s:skip_expr	javascript.vim	/^let s:skip_expr = "s:SynAt(line('.'),col('.')) =~? b:syng_strcom"$/;"	v
s:z	javascript.vim	/^let s:z = has('patch-7.4.984') ? 'z' : ''$/;"	v
sw	javascript.vim	/^  function s:sw()$/;"	f
